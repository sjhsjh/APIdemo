<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.example.apidemo">
    <!-- android:sharedUserId="android.uid.system" -->  <!-- 没有系统的签名加上这uid是安装不上的-->

    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!-- <uses-permission android:name="android.permission.DEVICE_POWER" /> -->
    <uses-permission android:name="android.permission.DISABLE_KEYGUARD" />

    <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" />
    <!--<uses-permission android:name="android.permission.INSTALL_SHORTCUT" />  -->
    <!--<uses-permission android:name="com.android.launcher.permission.READ_SETTINGS"/>-->  <!--貌似不需要-->
    <!--<uses-permission android:name="com.android.launcher2.permission.READ_SETTINGS"/>-->
    <!--<uses-permission android:name="com.android.launcher3.permission.READ_SETTINGS"/>-->
    <!--<uses-permission android:name="com.huawei.launcher3.permission.READ_SETTINGS" />-->
    <!--<uses-permission android:name="com.huawei.launcher3.permission.WRITE_SETTINGS" />-->

    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-permission android:name="android.permission.FLASHLIGHT"/>
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />   <!--    SYSTEM_OVERLAY_WINDOW-->
    <!-- 展开or收起通知栏 -->
    <uses-permission android:name="android.permission.EXPAND_STATUS_BAR" />
    <!-- 允许后台运行的弹窗权限，即电池优化 -->
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" /> <!-- setPersisted用到。Workmanager库也会引入该权限-->

    <uses-feature android:name="android.hardware.camera2"/>
    <uses-feature android:name="android.hardware.autofocus" />

    <application
        android:name=".APIDemoApplication"
        android:allowBackup="true"
        android:icon="@drawable/earth"
        android:label="@string/app_name"
        android:supportsRtl="true"
        tools:replace="name, icon, label, theme"
        android:theme="@style/AppTheme">

        <!-- [ADMOB_APP_ID]，在application 标签内-->
        <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="ca-app-pub-8415538412403902~6854902093"/>
        <!--<meta-data-->
            <!--android:name="com.google.android.gms.ads.AD_MANAGER_APP"-->
            <!--android:value="true"/>-->

        <meta-data
            android:name="android.max_aspect"
            android:value="2.3" />

        <activity
            android:name=".MainActivity"
            android:launchMode="singleTop"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".activity.ResolveInfoActivity"
            android:label="ResolveInfoActivity">
            <intent-filter>
                <action android:name="android.intent.action.sss" />
            </intent-filter>
        </activity>
        <activity
            android:name=".activity.PowerManagerActivity"
            android:enabled="true"
            android:exported="true"
            android:label="PowerManagerActivityLabel">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <action android:name="android.intent.action.222" />
                <category android:name="android.intent.category.sjh2" />
            </intent-filter>
        </activity>
        <!-- android:targetActivity="MainActivity" -->

        <activity android:name=".activity.ShortCutActivity">
            <intent-filter>
                <action android:name="android.intent.action.CREATE_SHORTCUT" />
            </intent-filter>
        </activity>
        <activity android:name=".activity.EventDispatchActivity" />
        <activity android:name=".activity.TestServiceActivity" />
        <activity android:name=".activity.NewsActivity" />
        <activity android:name=".activity.SQLActivity" />
        <activity android:name=".activity.HardWareActivity"
            android:launchMode="singleTask"
            android:taskAffinity="com.sjh.zyc.taskAffinity.HardWareActivity">
        </activity>
        <activity android:name=".activity.WindowActivity"
            android:configChanges="orientation|screenSize" />

        <!-- 8.0开始不能再 静态注册隐式广播了。但能在清单文件注册显式广播。概括理解：清单文件中广播的intent-filter无效-->
        <!-- ps：发送隐式广播时携带intent.addFlags(0x01000000); 即能让广播突破隐式广播限制，让清单文件注册的隐式广播能收到广播。FLAG_RECEIVER_INCLUDE_BACKGROUND。-->
        <receiver android:name=".notification.NotificationReceiver" />

        <!-- BOOT_COMPLETED不受8.0静态隐式广播限制。https://developer.android.google.cn/guide/components/broadcast-exceptions.html -->
        <!--国产手机不给自启动权限也收到开机广播？？？关机前应用进程若存在，重启后没自启动权限也收到开机广播-->
        <receiver android:name=".broadcastReceiver.MyBootReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.USER_PRESENT" />
            </intent-filter>
        </receiver>


        <service
            android:name=".service.TestService"
            android:enabled="true"
            android:exported="true" >

            <intent-filter>
                <action android:name=".AIDLAction" />
            </intent-filter>
        </service>

        <service
            android:name=".service.MessengerService"
            android:process=":remote" >
        </service>

      <!--  <service
            android:label="ApiDemo-监听当前最顶层的Activity"
            android:name="com.example.apidemo.utils.background.DetectService"
            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE">

            <intent-filter>
                <action android:name="android.accessibilityservice.AccessibilityService" />
            </intent-filter>

            <meta-data
                android:name="android.accessibilityservice"
                android:resource="@xml/detection_service_config" />
        </service>-->

        <service
            android:label="ApiDemo-模拟屏幕点击"
            android:name="com.example.apidemo.accessibility.ClickAccessibilityService"
            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE">

            <intent-filter>
                <action android:name="android.accessibilityservice.AccessibilityService" />
            </intent-filter>

            <meta-data
                android:name="android.accessibilityservice"
                android:resource="@xml/accessibility_service_config" />
        </service>

        <service
            android:name=".service.MyJobService"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <service
            android:name=".screenshot.FloatWindowsService" android:exported="false"/>

        <!--
        android:isolatedProcess=["true" | "false"]
    android:icon="drawable resource"
    android:label="string resource"
    android:name="string"
    android:permission="string"
    android:process="string"
    android:isolatedProcess : 如果设置为true，这个service将运行在一个从系统中其他部分分离出来的特殊进程中，我们只能通过Service API来与它进行交流。默认为false。
    android:label : 显示给用户的这个service的名字。如果不设置，将会默认使用<application>的label属性。
    android:name : service名称，这个属性是唯一一个必须填的属性。
    android:permission : 其他组件必须具有所填的权限才能启动这个service。
    android:process : service运行的进程的name。默认启动的service是运行在主进程中的。远程服务时才写成android:process=":remote" ！！
        -->

        <activity android:name=".activity.NotificationActivity" />
        <activity android:name=".activity.DIYViewActivity" />
        <activity android:name=".activity.GsonActivity" />
        <activity android:name=".activity.SlideActivity" />
        <activity android:name=".activity.ScrollActivity" />
        <activity android:name=".activity.GestureDectorActivity" />
        <activity android:name=".activity.RxJavaActivity" />
        <activity android:name=".activity.ReferenceActivity" />    <!-- android:configChanges="orientation|screenSize"-->
        <activity android:name=".activity.SDActivity" />
        <activity android:name=".activity.MessengerActivity" />
        <activity android:name=".activity.FunctionActivity" />
        <activity android:name=".activity.GridViewActivity" />
        <activity android:name=".activity.ViewModelActivity" />
        <activity android:name=".activity.XmlParseActivity" />
        <activity android:name=".activity.SocketClientActivity" />
        <activity android:name=".activity.SocketServerActivity" />
        <activity android:name=".activity.GaussActivity" />
        <activity android:name=".activity.ScaleActivity" />
        <activity android:name=".activity.ADActivity" />
        <activity android:name=".activity.NestScrollActivity" />
        <activity android:name=".activity.CoordinatorActivity" />
        <activity android:name=".activity.AppBarActivity" />
        <activity
            android:name=".activity.AutoClickActivity"
            android:launchMode="singleTop" />
        <activity android:name=".activity.JobServiceActivity" />
        <activity android:name=".activity.ScreenShotActivity" />
        <activity
            android:name=".screenshot.ScreenShotPermissionActivity"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />   <!-- 让activity背景透明 -->


        <meta-data android:value="58db526f310c935d4f001c2e" android:name="UMENG_APPKEY"/>       <!--  测试key：59420a29a40fa31dad000ce9-->
        <meta-data android:value="my_channel" android:name="UMENG_CHANNEL"/>

    </application>

</manifest>